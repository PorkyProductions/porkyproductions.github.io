{"version":3,"file":"scramble.203a81eb.js","sources":["../../node_modules/svelte-typewriter/helpers/getLettersTimeout.js","../../node_modules/svelte-typewriter/helpers/getRandomLetter.js","../../node_modules/svelte-typewriter/modes/scramble.js"],"sourcesContent":["import { rng } from './rng'\n\n// returns a array with a timeout (in ms) for each letter of the word\nexport const getLettersTimeout = (textLetters, timeout) => {\n\tconst minimumTimeoutPossible = timeout / 3\n\t// TODO: find a better way to deal with this instead of explicitly reducing the maximum timeout\n\t// otherwise, at the end of the animation, one or two characters remain scrambled\n\tconst lettersTimeout = textLetters.map(() => rng(minimumTimeoutPossible, timeout - 100))\n\treturn lettersTimeout\n}\n","import { rng } from './rng'\n\nexport const getRandomLetter = () => {\n\tconst possibleLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'.split(\n\t\t''\n\t)\n\tconst letterIndexLimit = possibleLetters.length\n\tconst randomLetterIndex = rng(0, letterIndexLimit)\n\tconst randomLetter = possibleLetters[randomLetterIndex]\n\treturn randomLetter\n}\n","import { getLettersTimeout } from '../helpers/getLettersTimeout'\nimport { getRandomLetter } from '../helpers/getRandomLetter'\nimport { rng } from '../helpers/rng'\nimport { sleep } from '../helpers/sleep'\nimport { runOnEveryParentUntil } from '../helpers/runOnEveryParentUntil'\nimport { animationSetup } from '../helpers/animationSetup'\n\n/** @type {TypewriterModeFn} */\nconst scramble = async (node, props) => {\n\tconst { options, elements } = animationSetup(node, props)\n\n\tconst timeout = options.scrambleDuration\n\n\tawait new Promise(resolve => {\n\t\telements.forEach(async ({ currentNode, text }) => {\n\t\t\tlet wordLetters = text.split('')\n\t\t\tconst lettersTimeout = getLettersTimeout(wordLetters, timeout)\n\t\t\tconst startingTime = Date.now()\n\n\t\t\trunOnEveryParentUntil(currentNode, options.parentElement, element => {\n\t\t\t\telement.classList.add('finished-typing')\n\t\t\t})\n\n\t\t\twhile (Date.now() - startingTime < timeout) {\n\t\t\t\tconst randomLetterIndex = rng(0, wordLetters.length)\n\t\t\t\tconst randomLetterTimeout = lettersTimeout[randomLetterIndex]\n\t\t\t\tconst isRandomLetterWhitespace = wordLetters[randomLetterIndex] === ' '\n\t\t\t\tconst timeEllapsed = () => Date.now() - startingTime\n\t\t\t\tconst didRandomLetterReachTimeout = () => timeEllapsed() >= randomLetterTimeout\n\n\t\t\t\tif (didRandomLetterReachTimeout() || isRandomLetterWhitespace) {\n\t\t\t\t\tconst letterFinishedAnimation =\n\t\t\t\t\t\twordLetters[randomLetterIndex] === text[randomLetterIndex]\n\n\t\t\t\t\tif (!letterFinishedAnimation)\n\t\t\t\t\t\twordLetters[randomLetterIndex] = text[randomLetterIndex]\n\t\t\t\t\telse continue\n\t\t\t\t} else {\n\t\t\t\t\twordLetters[randomLetterIndex] = getRandomLetter()\n\t\t\t\t}\n\n\t\t\t\tconst scrambledText = wordLetters.join('')\n\t\t\t\tcurrentNode.innerHTML = scrambledText\n\n\t\t\t\tconst finishedScrambling = scrambledText === text\n\n\t\t\t\tconst letterInterval = options.scrambleSlowdown\n\t\t\t\t\t? Math.round(timeEllapsed() / 100)\n\t\t\t\t\t: 1\n\n\t\t\t\tawait sleep(letterInterval)\n\n\t\t\t\tif (finishedScrambling) {\n\t\t\t\t\tresolve()\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrentNode.innerHTML = text\n\t\t})\n\t})\n\toptions.dispatch('done')\n}\n\nexport default scramble\n"],"names":["getLettersTimeout","textLetters","timeout","minimumTimeoutPossible","rng","getRandomLetter","possibleLetters","letterIndexLimit","randomLetterIndex","scramble","node","props","options","elements","animationSetup","resolve","currentNode","text","wordLetters","lettersTimeout","startingTime","runOnEveryParentUntil","element","randomLetterTimeout","isRandomLetterWhitespace","timeEllapsed","scrambledText","finishedScrambling","letterInterval","sleep"],"mappings":"yGAGO,MAAMA,EAAoB,CAACC,EAAaC,IAAY,CAC1D,MAAMC,EAAyBD,EAAU,EAIzC,OADuBD,EAAY,IAAI,IAAMG,EAAID,EAAwBD,EAAU,GAAG,CAAC,CAExF,ECPaG,EAAkB,IAAM,CACpC,MAAMC,EAAkB,iEAAiE,MACxF,EACA,EACKC,EAAmBD,EAAgB,OACnCE,EAAoBJ,EAAI,EAAGG,CAAgB,EAEjD,OADqBD,EAAgBE,EAEtC,ECFMC,EAAW,MAAOC,EAAMC,IAAU,CACvC,KAAM,CAAE,QAAAC,EAAS,SAAAC,CAAQ,EAAKC,EAAeJ,EAAMC,CAAK,EAElDT,EAAUU,EAAQ,iBAExB,MAAM,IAAI,QAAQG,GAAW,CAC5BF,EAAS,QAAQ,MAAO,CAAE,YAAAG,EAAa,KAAAC,CAAI,IAAO,CACjD,IAAIC,EAAcD,EAAK,MAAM,EAAE,EAC/B,MAAME,EAAiBnB,EAAkBkB,EAAahB,CAAO,EACvDkB,EAAe,KAAK,IAAK,EAM/B,IAJAC,EAAsBL,EAAaJ,EAAQ,cAAeU,GAAW,CACpEA,EAAQ,UAAU,IAAI,iBAAiB,CAC3C,CAAI,EAEM,KAAK,MAAQF,EAAelB,GAAS,CAC3C,MAAMM,EAAoBJ,EAAI,EAAGc,EAAY,MAAM,EAC7CK,EAAsBJ,EAAeX,GACrCgB,EAA2BN,EAAYV,KAAuB,IAC9DiB,EAAe,IAAM,KAAK,IAAK,EAAGL,EAGxC,IAFoC,IAAMK,EAAY,GAAMF,GAE3B,GAAIC,EAIpC,GAAI,EAFHN,EAAYV,KAAuBS,EAAKT,IAGxCU,EAAYV,GAAqBS,EAAKT,OAClC,eAELU,EAAYV,GAAqBH,EAAiB,EAGnD,MAAMqB,EAAgBR,EAAY,KAAK,EAAE,EACzCF,EAAY,UAAYU,EAExB,MAAMC,EAAqBD,IAAkBT,EAEvCW,EAAiBhB,EAAQ,iBAC5B,KAAK,MAAMa,EAAc,EAAG,GAAG,EAC/B,EAIH,GAFA,MAAMI,EAAMD,CAAc,EAEtBD,EAAoB,CACvBZ,EAAS,EACT,KACA,CACD,CAEDC,EAAY,UAAYC,CAC3B,CAAG,CACH,CAAE,EACDL,EAAQ,SAAS,MAAM,CACxB"}